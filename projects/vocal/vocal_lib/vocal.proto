package NVocal;

message TServerRegisterPacket {
    required bytes Captcha = 1;
    required bytes PublicKey = 2;
}

message TClientRegisterPacket {
    required string CaptchaText = 1;
    required string Login = 2;
    required bytes PublicKey = 3;
    required bytes EncryptedPrivateKey = 4;
    required bytes LoginPasswordHash = 5;
    required string EMail = 6;
}

message TServerLoginPacket {
    required bytes Captcha = 1;
    required bytes PublicKey = 2;
}

message TClientLoginPacket {
    required string Login = 1;
    required bytes LoginPasswordHash = 2;
    required string CaptchaText = 3;
}

enum ELoginResult {
    LR_Success = 1;
    LR_WrongCaptcha = 2;
    LR_WrongUserOrPassword = 3;
    LR_ConnectionFail = 4;
}

message TServerLoginConfirm {
    required ELoginResult Result = 1;
    optional bytes EncryptedPrivateKey = 2;
    optional bytes PublicKey = 3;
}

message TServerAuthorizeRequest {
    required bytes RandomSequence = 1;
    required bytes Signature = 2;
}

message TClientAuthorizeRequest {
    required string Login = 1;
    required bytes RandomSequenceHash = 2;
    required bytes RandomSequenceHashSignature = 3;
}

message TClientConnectHelpAuthorizeRequest {
    required string Login = 1;
    required string FriendLogin = 2;
    required bytes RandomSequenceHash = 3;
    required bytes RandomSequenceHashSignature = 4;
    required bool AcceptingConnection = 5;
    optional string PublicAddress = 6;  // nat-pmp detected address
}

enum EConnectionType {
    CTP_NatTraversal = 1;
    CTP_Listen = 2;
    CTP_Connect = 3;
    CTP_Offline = 4;
}

message TServerConnectHelpRequest {
    required EConnectionType ConnectionType = 1;
    optional string Address = 2;
}

message TAddFriendRequest {
    required string Login = 1;
    required bytes EncryptedKey = 2;
}

message TDirectionedMessage {
    required string Login = 1;
    required bytes Message = 2;
    required bool Incoming = 3;
}

message TClientSyncPacket {
    repeated TDirectionedMessage EncryptedMessages = 1;
    required uint64 From = 2;
    required uint64 To = 3;
}

message TSyncFriend {
    required string Login = 1;
    required uint32 Status = 2;
    required bytes EncryptedKey = 3;
    required bytes PublicKey = 4;
    required bytes ServerPublicKey = 5;
    optional bytes OfflineKey = 6;
    optional bytes OfflineKeySignature = 7;
    optional bool NeedOfflineKey = 8;
}

message TClientSyncInfoPacket {
    repeated TSyncFriend Friends = 1;
}

message TFriendRandomSequenceConfirm {
    required bytes RandomSequenceHash = 1;
    required bytes Signature = 2;
    required bytes SessionKey = 4;
}

message TFriendOfflineKey {
    required string Login = 1;
    required bytes OfflineKey = 2;
    required bytes OfflineKeySignature = 3;
}

message TOfflineMessage {
    required string FriendLogin = 1;
    required bytes EncryptedMessage = 2;
}

message TSyncMessagesRequest {
    required uint64 From = 1;
    required uint64 To = 2;
}

message TMessagePacket {
    required string From = 1;
    required string To = 2;
    required uint64 Time = 3;
    required string Text = 4;
}
